# Settings {{{

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

# }}}

# UI {{{

[[plugins]]
repo = 'justinmk/vim-dirvish'
hook_add = '''
  "map <silent> ;e :<C-u>Dirvish<CR>

  augroup VimDirvish
    autocmd!
    " Map t to "open in new tab".
    autocmd FileType dirvish nnoremap <buffer> t
        \ :tabnew <C-R>=fnameescape(getline('.'))<CR><CR>

    " Map CTRL-R to reload the Dirvish buffer.
    autocmd FileType dirvish nnoremap <buffer> <C-R> :<C-U>Dirvish %<CR>

    " Map gh to hide "hidden" files.
    autocmd FileType dirvish nnoremap <buffer> gh
        \ :set ma<bar>g@\v/\.[^\/]+/?$@d<cr>:set noma<cr>

    " Map h to Open the parent directory.
    autocmd FileType dirvish nnoremap <buffer><silent> h :Dirvish %:h:h<CR>

    " Map ~ to Open the home directory.
    autocmd FileType dirvish nnoremap <buffer><silent> ~ :Dirvish ~<CR>
  augroup END
'''

# Unite {{{

[[plugins]]
repo = 'Shougo/unite.vim'
#on_source = ['Shougo/unite-session', 'Shougo/neomru.vim']
hook_add = 'source ~/.vim/rc/plugins/unite.vim'

[[plugins]]
repo = 'Shougo/unite-help'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/unite-outline'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/unite-session'

[[plugins]]
repo = 'thinca/vim-unite-history'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'tsukkee/unite-tag'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'ujihisa/unite-font'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-highlight'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'pasela/unite-webcolorname'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neossh.vim'
depends = ['Shougo/unite.vim']

[[plugins]]
repo = 'thinca/vim-ref'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'glidenote/memolist.vim'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'kmnk/vim-unite-giti'
depends = 'Shougo/unite.vim'

[[plugins]]
repo = 'sorah/unite-ghq'
depends = 'Shougo/unite.vim'

# }}}

# }}}

# Complement {{{

[[plugins]]
repo = 'thinca/vim-ambicmd'
on_i = 1
hook_add = '''
  cnoremap <expr> <Space> ambicmd#expand("\<Space>")
  cnoremap <expr> <CR>    ambicmd#expand("\<CR>")
'''

# Snippet
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'honza/vim-snippets'
depends = 'Shougo/neosnippet.vim'
hook_add = '''
  let g:neosnippet#snippets_directory = $DOTVIM . '/snippets' . ',' . $VIM_BUNDLE . '/vim-snippts/snippets'
'''

# }}}

# Text object {{{

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-entire'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-line'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-lastpat'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-fold'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-function'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-indent'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'mattn/vim-textobj-url'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'rhysd/vim-textobj-ruby'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'osyo-manga/vim-textobj-multitextobj'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'osyo-manga/vim-textobj-blockwise'
depends = 'kana/vim-textobj-user'

[[plugins]]
repo = 'thinca/vim-textobj-between'
depends = 'kana/vim-textobj-user'

# }}}

# Auxiliary {{{

# Templete
repo = 'mattn/sonictemplate-vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-repeat'

# }}}

# Search {{{

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  set hlsearch
  let g:incsearch#auto_nohlsearch = 1

  map /  <Plug>(incsearch-forward)
  map ?  <Plug>(incsearch-backward)
  map g/ <Plug>(incsearch-stay)
  map n  <Plug>(incsearch-nohl-n)
  map N  <Plug>(incsearch-nohl-N)
'''

[[plugins]]
repo = 'haya14busa/incsearch-fuzzy.vim'
depends = 'haya14busa/incsearch.vim'
hook_add = '''
  map z/ <Plug>(incsearch-fuzzy-/)
  map z? <Plug>(incsearch-fuzzy-?)
  map zg/ <Plug>(incsearch-fuzzy-stay)
'''

[[plugins]]
repo = 'haya14busa/incsearch-migemo.vim'
depends = 'haya14busa/incsearch.vim'
hook_add = '''
  map m/ <Plug>(incsearch-migemo-/)
  map m? <Plug>(incsearch-migemo-?)
  map mg/ <Plug>(incsearch-migemo-stay)
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'
hook_add = '''
  map *   <Plug>(incsearch-nohl)<Plug>(asterisk-*)
  map g*  <Plug>(incsearch-nohl)<Plug>(asterisk-g*)
  map #   <Plug>(incsearch-nohl)<Plug>(asterisk-#)
  map g#  <Plug>(incsearch-nohl)<Plug>(asterisk-g#)

  map z*  <Plug>(incsearch-nohl0)<Plug>(asterisk-z*)
  map gz* <Plug>(incsearch-nohl0)<Plug>(asterisk-gz*)
  map z#  <Plug>(incsearch-nohl0)<Plug>(asterisk-z#)
  map gz# <Plug>(incsearch-nohl0)<Plug>(asterisk-gz#)
'''

[[plugins]]
repo = 'haya14busa/vim-migemo'

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
  let g:clever_f_smart_case = 1
  let g:clever_f_across_no_line = 1
  let g:clever_f_use_migemo = 1
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  map n <Plug>(incsearch-nohl)<Plug>(anzu-n-with-echo)
  map N <Plug>(incsearch-nohl)<Plug>(anzu-N-with-echo)
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
  vnoremap [s] <NOP>
  vmap s [s]

  nmap [s]/ <Plug>(easymotion-bd-f2)
  vmap [s]/ <Plug>(easymotion-bd-f2)
  map ;l <Plug>(easymotion-bd-jk)
  map ;w <Plug>(easymotion-bd-w)

  let g:EasyMotion_do_mapping = 0
  let g:EasyMotion_use_migemo = 1
  let g:EasyMotion_use_upper = 1
  let g:EasyMotion_smartcase = 1
'''

# }}}

# View {{{

[[plugins]]
repo = 'lilydjwg/colorizer'

[[plugins]]
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_color_term = 239
  augroup IndentLine
    autocmd!
    autocmd InsertEnter * IndentLinesDisable
    autocmd InsertLeave * IndentLinesEnable
  augroup END
'''

[[plugins]]
repo = 'LeafCage/foldCC'
hook_add = '''
  set foldtext=FoldCCtext()
  let g:foldCCtext_tail = 'printf(" %s[%4d lines Lv%-2d]%s", v:folddashes, v:foldend-v:foldstart+1, v:foldlevel, v:folddashes)'
'''

# Colorscheme {{{

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'w0ng/vim-hybrid'

# }}}

# }}}

# Others {{{

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
  nmap gs <Plug>(openbrowser-smart-search)
  vmap gs <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'tyru/open-browser-github.vim'

[[plugins]]
repo = 'rizzatti/dash.vim'
hook_add = '''
  nmap <silent> [Space]d <Plug>DashSearch
'''

[[plugins]]
repo = 'mattn/benchvimrc-vim'

[[plugins]]
repo = 'kana/vim-niceblock'

[[plugins]]
repo = 'airblade/vim-rooter'
hook_add = '''
  let g:rooter_disable_map = 1
  let g:rooter_autocmd_patterns = '*.go,*.rb,*.js,*.py,*.md,*.vim'
  let g:rooter_change_directory_for_non_project_files = 1
  let g:rooter_silent_chdir = 1
'''

# Document
[[plugins]]
repo = 'vim-jp/vimdoc-ja'

# }}}
